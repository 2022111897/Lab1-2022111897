#include <iostream>
#include<stdio.h>
using namespace std;
int main()
{
	int v[13]={-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}; //AB，AC，AD，BA，BC，BD，DA，DB，DA，DC，EA，EB，EC，ED分别代表v的0，1，2，3，4，5，6，7，8，9，11，12
    int e[13][13]={
	                {0,0,0,0,1,1,1,0,0,1,0,0,0},
	                {0,0,0,0,0,1,1,1,0,1,1,0,0},
				    {0,0,0,0,0,0,0,0,0,1,1,1,0},
				    {0,0,0,0,0,0,0,0,0,0,0,0,0},
				    {1,0,0,0,0,0,0,1,0,0,1,0,0},
				    {1,1,0,0,0,0,1,0,0,0,1,1,0},
				    {1,1,0,0,0,1,0,0,0,0,1,1,0},
					{0,1,0,0,1,0,0,0,0,0,0,1,0},
					{0,0,0,0,0,0,0,0,0,0,0,0,0},
					{1,1,1,0,0,0,0,0,0,0,0,0,0},
					{0,1,1,0,1,1,1,0,0,0,0,0,0},
					{0,0,1,0,0,1,1,1,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0,0,0,0}
					};//表示路线是否交叉
    int cnt_color = 1;
    int i, j;
    for (i = 0; i < 13; ++i) //第一层循环，找到未涂色的点
    {

        if (v[i] == -1)
        {
            v[i] = cnt_color;
            printf("第%d组交通灯：%d ", cnt_color, i);
            for (j = 1; j < 13; ++j) //第二层循环，找到与i不冲突且未着色的顶点
            {
			    int flag = 1;
                if (v[j] == -1 && e[i][j] == 0)
                {
                    for (int h = 0; h < 13; ++h) //第三层循环，确定j与其他同色的点不冲突
                        if (e[j][h] == 1 && v[h] == cnt_color)
                        {
                            flag = 0;
                            break;
                        }
                    if (flag == 1)
                    {
                        v[j] = cnt_color;
                        printf("%d ", j);
                    }
                }
            }
            cnt_color++;
            printf("\n");
        }
    }
    printf("设置%d组交通灯\n", cnt_color - 1);
    return 0;
}
